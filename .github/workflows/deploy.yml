name: Deploy Backend Infrastructure

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    name: Deploy to AWS
    runs-on: ubuntu-latest    
    env:
      ACTIONS_STEP_DEBUG: true

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      
      - name: Download and Repackage OTEL Lambda Layer
        run: |
          mkdir -p infrastructure
          curl -L -o infrastructure/otel-layer-orig.zip "https://github.com/aws-observability/aws-otel-lambda/releases/download/v2.5.0/aws-otel-python313-amd64-ver-2-5-0.zip"
          
          echo "Unzipping original layer..."
          unzip -q infrastructure/otel-layer-orig.zip -d infrastructure/otel-layer-orig
          
          echo "Repackaging to ensure python/ is at root..."
          cd infrastructure/otel-layer-orig
          TOPDIR=$(ls -d */ | head -n 1)
          if [ -d "${TOPDIR}python" ]; then
            cd "$TOPDIR"
          fi
          zip -qr ../../otel-layer.zip python
          cd ../../
          
          echo "Layer repackaged as infrastructure/otel-layer.zip"
      
      - name: Inspect OTEL Layer ZIP structure
        run: |
          echo "Listing first 50 files in repackaged otel-layer.zip..."
          unzip -l infrastructure/otel-layer.zip | head -50
          
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::615201069679:role/GitHub_Terraform_Backend_Deployer_Role
          aws-region: ap-south-2
          audience: sts.amazonaws.com

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Run Python Unit Tests
        run: python -m unittest discover

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init -upgrade
        env:
          TF_VAR_ip_hash_secret: ${{ secrets.ip_hash_secret }} 

      - name: Run tfsec Security Scan
        uses: aquasecurity/tfsec-action@v1.0.0        

      - name: Terraform Plan
        run: terraform plan -no-color -input=false
        env:
          TF_VAR_ip_hash_secret: ${{ secrets.ip_hash_secret }} 

      - name: Terraform Apply
        run: terraform apply -auto-approve -no-color -input=false
        env:
          TF_VAR_ip_hash_secret: ${{ secrets.ip_hash_secret }}
